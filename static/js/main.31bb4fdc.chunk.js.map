{"version":3,"sources":["helpers/Contexts.js","components/Menu.js","helpers/Questions.js","components/Quiz.js","components/EndScreen.js","App.js","index.js"],"names":["GameStateContext","createContext","Menu","useContext","setGameState","gameState","setUserName","userName","className","type","placeholder","onChange","event","target","value","onClick","Questions","prompt","optionA","optionB","optionC","optionD","asnwer","Quiz","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","score","setScore","chooseOption","option","length","id","EndScreen","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAEaA,G,KAAmBC,wBAAc,KC2B/BC,MAzBf,WAAiB,IAAD,EAC6CC,qBACzDH,GADiBI,GADL,EACNC,UADM,EACKD,cAAwBE,GAD7B,EACmBC,SADnB,EAC6BD,aAG3C,OACE,sBAAKE,UAAU,OAAf,UACE,qDACA,uBACEC,KAAK,OACLC,YAAY,iBACZC,SAAU,SAACC,GACTN,EAAYM,EAAMC,OAAOC,UAG7B,wBACEC,QAAS,WACPX,EAAa,YAFjB,4BClBOY,EAAY,CACvB,CACEC,OAAQ,mBACRC,QAAS,OACTC,QAAS,OACTC,QAAS,OACTC,QAAS,UACTC,OAAQ,WAEV,CACEL,OAAQ,+CACRC,QAAS,SACTC,QAAS,aACTC,QAAS,QACTC,QAAS,OACTC,OAAQ,WAEV,CACEL,OAAQ,+CACRC,QAAS,QACTC,QAAS,UACTC,QAAS,MACTC,QAAS,OACTC,OAAQ,YCyDGC,MAzEf,WAAiB,IAAD,EACgCC,mBAAS,GADzC,mBACPC,EADO,KACUC,EADV,OAE0BF,mBAAS,IAFnC,mBAEPG,EAFO,KAEOC,EAFP,OAIuCzB,qBACnDH,GADM6B,EAJM,EAINA,MAAOC,EAJD,EAICA,SAAqB1B,GAJtB,EAIWC,UAJX,EAIsBD,cAI9B2B,EAAe,SAACC,GACpBJ,EAAgBI,IAiBlB,OACE,sBAAKxB,UAAU,OAAf,UACE,6BAAKQ,EAAUS,GAAiBR,SAChC,sBAAKT,UAAU,YAAf,UACE,wBACEO,QAAS,WACPgB,EAAa,YAFjB,SAKGf,EAAUS,GAAiBP,UAE9B,wBACEH,QAAS,WACPgB,EAAa,YAFjB,SAKGf,EAAUS,GAAiBN,UAE9B,wBACEJ,QAAS,WACPgB,EAAa,YAFjB,SAKGf,EAAUS,GAAiBL,UAE9B,wBACEL,QAAS,WACPgB,EAAa,YAFjB,SAKGf,EAAUS,GAAiBJ,aAI/BI,GAAmBT,EAAUiB,OAAS,EACrC,wBAAQlB,QA1CK,WACbC,EAAUS,GAAiBH,QAAUK,GACvCG,EAASD,EAAQ,GAEnBzB,EAAa,aAsCoB8B,GAAG,eAAhC,yBAIA,wBAAQnB,QArDO,WACfC,EAAUS,GAAiBH,QAAUK,GACvCG,EAASD,EAAQ,GAEnBH,EAAmBD,EAAkB,IAiDFS,GAAG,eAAlC,+BC7COC,EArBG,WAAO,IAAD,EAC8BhC,qBAClDH,GADM6B,EADc,EACdA,MAAOC,EADO,EACPA,SAAU1B,EADH,EACGA,aAAcG,EADjB,EACiBA,SAQvC,OACE,sBAAKC,UAAU,YAAf,UACE,+CACA,6BAAKD,IACL,+BACGsB,EADH,MACab,EAAUiB,UAEvB,wBAAQlB,QAXQ,WAClBe,EAAS,GACT1B,EAAa,SASX,8BCWSgC,MA1Bf,WAAgB,IAAD,EACqBZ,mBAAS,QAD9B,mBACNnB,EADM,KACKD,EADL,OAEmBoB,mBAAS,IAF5B,mBAENjB,EAFM,KAEID,EAFJ,OAGakB,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAKb,OACE,sBAAKtB,UAAU,MAAf,UACE,0CACA,eAACR,EAAiBqC,SAAlB,CACEvB,MAAO,CACLT,YACAD,eACAG,WACAD,cACAuB,QACAC,YAPJ,UAUiB,SAAdzB,GAAwB,cAAC,EAAD,IACV,YAAdA,GAA2B,cAAC,EAAD,IACb,aAAdA,GAA4B,cAAC,EAAD,WCvBrCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.31bb4fdc.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const GameStateContext = createContext(\"\");\r\n","import \"../App.css\";\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\n\r\nfunction Menu() {\r\n  const { gameState, setGameState, userName, setUserName } = useContext(\r\n    GameStateContext\r\n  );\r\n  return (\r\n    <div className=\"Menu\">\r\n      <label>Enter Your Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ex. John Smith\"\r\n        onChange={(event) => {\r\n          setUserName(event.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          setGameState(\"playing\");\r\n        }}\r\n      >\r\n        Start Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","export const Questions = [\r\n  {\r\n    prompt: \"What is my name?\",\r\n    optionA: \"John\",\r\n    optionB: \"Jake\",\r\n    optionC: \"Josh\",\r\n    optionD: \"Avinash\",\r\n    asnwer: \"optionD\",\r\n  },\r\n  {\r\n    prompt: \"Which of this is not a programming language?\",\r\n    optionA: \"Python\",\r\n    optionB: \"JavaScript\",\r\n    optionC: \"MC-03\",\r\n    optionD: \"Java\",\r\n    asnwer: \"optionC\",\r\n  },\r\n  {\r\n    prompt: \"Which of this is not a javascript framework?\",\r\n    optionA: \"React\",\r\n    optionB: \"Angular\",\r\n    optionC: \"Vue\",\r\n    optionD: \"Java\",\r\n    asnwer: \"optionD\",\r\n  },\r\n];\r\n","import \"../App.css\";\r\nimport { Questions } from \"../helpers/Questions\";\r\nimport { useState } from \"react\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n  const { score, setScore, gameState, setGameState } = useContext(\r\n    GameStateContext\r\n  );\r\n\r\n  const chooseOption = (option) => {\r\n    setOptionChosen(option);\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (Questions[currentQuestion].asnwer == optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  const finishQuiz = () => {\r\n    if (Questions[currentQuestion].asnwer == optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setGameState(\"finished\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <h1>{Questions[currentQuestion].prompt}</h1>\r\n      <div className=\"questions\">\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionA\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionA}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionB\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionB}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionC\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionC}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionD\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionD}\r\n        </button>\r\n      </div>\r\n\r\n      {currentQuestion == Questions.length - 1 ? (\r\n        <button onClick={finishQuiz} id=\"nextQuestion\">\r\n          Finish Quiz\r\n        </button>\r\n      ) : (\r\n        <button onClick={nextQuestion} id=\"nextQuestion\">\r\n          Next Question\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\nimport { Questions } from \"../helpers/Questions\";\r\n\r\nconst EndScreen = () => {\r\n  const { score, setScore, setGameState, userName } = useContext(\r\n    GameStateContext\r\n  );\r\n\r\n  const restartQuiz = () => {\r\n    setScore(0);\r\n    setGameState(\"menu\");\r\n  };\r\n  return (\r\n    <div className=\"EndScreen\">\r\n      <h1>Quiz Finished</h1>\r\n      <h3>{userName}</h3>\r\n      <h1>\r\n        {score} / {Questions.length}\r\n      </h1>\r\n      <button onClick={restartQuiz}>Restart Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","import \"./App.css\";\r\nimport Menu from \"./components/Menu\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport EndScreen from \"./components/EndScreen\";\r\nimport { useState } from \"react\";\r\nimport { GameStateContext } from \"./helpers/Contexts\";\r\n// ['menu', 'playing', 'finished']\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(\"menu\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Quiz App</h1>\r\n      <GameStateContext.Provider\r\n        value={{\r\n          gameState,\r\n          setGameState,\r\n          userName,\r\n          setUserName,\r\n          score,\r\n          setScore,\r\n        }}\r\n      >\r\n        {gameState === \"menu\" && <Menu />}\r\n        {gameState === \"playing\" && <Quiz />}\r\n        {gameState === \"finished\" && <EndScreen />}\r\n      </GameStateContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}